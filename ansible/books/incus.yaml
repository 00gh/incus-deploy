---
- name: Incus - Add package repository
  hosts: all
  order: shuffle
  gather_facts: yes
  vars:
    task_release: "{{ incus_release | default('stable') }}"
    task_roles: "{{ incus_roles | default([]) }}"
  tasks:
    - name: Create apt keyring path
      file:
        path: /etc/apt/keyrings/
        mode: 0755
        state: directory
      when: 'task_roles|length > 0 and task_release != "distro"'

    - name: Add Zabbly repository key
      copy:
        src: ../files/incus/zabbly.asc
        dest: /etc/apt/keyrings/ansible-zabbly.asc
      notify: Update apt
      when: 'task_roles|length > 0 and task_release != "distro"'

    - name: Get DPKG architecture
      shell: dpkg --print-architecture
      register: dpkg_architecture
      changed_when: false
      check_mode: no
      when: 'task_roles|length > 0 and task_release != "distro"'

    - name: Add Zabbly package source
      template:
        src: ../files/incus/incus.sources.tpl
        dest: /etc/apt/sources.list.d/ansible-zabbly-incus-{{ task_release }}.sources
      notify: Update apt
      when: 'task_roles|length > 0 and task_release != "distro"'

  handlers:
    - name: Update apt
      apt:
        force_apt_get: yes
        update_cache: yes
        cache_valid_time: 0

- name: Incus - Install packages
  hosts: all
  order: shuffle
  gather_facts: yes
  vars:
    task_ip_address: "{{ incus_ip_address | default(ansible_default_ipv6['address'] | default(ansible_default_ipv4['address'])) }}"
    task_name: "{{ incus_name | default('') }}"
    task_roles: "{{ incus_roles | default([]) }}"

    task_servers: "{{ lookup('template', '../files/incus/incus.servers.tpl') | from_yaml | sort }}"
  tasks:
    - name: Install the Incus package
      apt:
        name:
          - incus
        install_recommends: no
        state: present
      register: install
      when: 'task_roles | length > 0'

    - name: Install the Incus UI package
      apt:
        name:
          - incus-ui-canonical
        install_recommends: no
        state: present
      when: '"ui" in task_roles'

    - name: Set client listen address
      shell:
        cmd: "incus --force-local config set core.https_address {{ task_ip_address }}"
      when: 'install.changed and ("standalone" in task_roles or ("cluster" in task_roles and task_servers[0] == inventory_hostname))'

    - name: Set cluster listen address
      shell:
        cmd: "incus --force-local config set cluster.https_address {{ task_ip_address }}"
      when: 'install.changed and "cluster" in task_roles and task_servers[0] == inventory_hostname'

    - name: Bootstrap the cluster
      shell:
        cmd: "incus --force-local cluster enable {{ inventory_hostname }}"
      when: 'install.changed and "cluster" in task_roles and task_servers[0] == inventory_hostname'

    - name: Create join tokens
      delegate_to: "{{ task_servers[0] }}"
      shell:
        cmd: "incus --force-local --quiet cluster add {{ inventory_hostname }}"
      register: cluster_add
      when: 'install.changed and "cluster" in task_roles and task_servers[0] != inventory_hostname'

    - name: Join the cluster
      throttle: 1
      shell:
        cmd: "incus --force-local admin init --preseed"
        stdin: |-
          cluster:
            enabled: true
            cluster_address: "{{ task_ip_address }}"
            cluster_token: "{{ cluster_add.stdout }}"
            server_address: "{{ task_ip_address }}"
      when: 'cluster_add.changed'
